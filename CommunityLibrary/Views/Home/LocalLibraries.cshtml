@model List<LibraryBook>
@{
    List<LibraryBook> updates = Model;
    int localId = 0;
    int bookId = 0;
    List<int> uniqueIds = new List<int>();
    bool IsMultipleLibraries = (TempData["OneLibrary"] is not null) ? false : true;

}
<div class="container py-4">
    @if (IsMultipleLibraries)
    {
        <h1>Local Libraries</h1>
    }
    else
    {
        <h1>@TempData["Name"]'s Library</h1>
        <h1>Rating: @TempData["Rating"]</h1>

        var rating = Convert.ToInt32(TempData["Rating"]);
        <partial name="_StarRatingPartial" model="rating" />
    }

    @if (Model.Count < 1)
    {
        <h1>I'm sorry, there are no books in your local libraries.</h1>
    }
    <form asp-action="LocalLibraries">
        <select name="id">

            @foreach (LibraryBook lb in Model)
            {
                if (!IsMultipleLibraries)
                {
                    break;
                }
                if (!uniqueIds.Contains(lb.BookOwnerId))
                {
                    uniqueIds.Add(lb.BookOwnerId);
                    <option value="@lb.BookOwnerId">@lb.BookOwner</option>
                }

            }
            @if (!IsMultipleLibraries)
            {
                <option value=@null>View All</option>
            }
        </select>
        <input type="submit" value="Swap Library" />
    </form>

    <br />

    <input type="text" id="titleSearch" onkeyup="myFunction()" placeholder="Search for books by Title...">

    <div class="stacked">
        @foreach (LibraryBook book in updates)
        {

            <div class="box" id=bookInfo+@bookId>

                <div>
                    @{int coverId = 0;
                        @if (book.ApiBook.covers is not null)
                        {
                            coverId = book.ApiBook.covers.Where(x => x > 0).First();
                            string imgSrc = $"http://covers.openlibrary.org/b/id/{coverId}.jpg";
                            <img src=" @imgSrc" alt="@book.ApiBook.title" width="100" />
                        }
                        else
                        {
                            <img width="100" src="https://via.placeholder.com/500x750?text=No+Cover+Found" alt="No book cover image available for @book.ApiBook.title">
                        }
                    }


                </div>
                <div class="box2">
                    <div class="center">
                        <h1 id=title+@bookId>@book.ApiBook.title</h1>


                        <h6>Author(s)</h6>
                        @if (book.ApiBook.authors is not null)
                        {
                            <p>
                                @foreach (Author author in book.ApiBook.authors)
                                {
                                    @author.name@:,
                                }
                            </p>
                        }
                        else
                        {
                            <p>Author is unknown</p>
                        }
                        <h6>Book Availability:</h6>
                        @if (book.DbBook.AvailibilityStatus == false)
                        {
                            <p>@book.BookHolder currently has checked this book out.</p>
                        }
                        else 
                        {
                            <p>This book is available. Submit a request and @book.BookOwner will get back to you.</p>
                        }

                    </div>
                    <div class="right">
                        <a asp-action="ViewApiInfoForSingleBook" asp-route-bookId="@book.DbBook.TitleIdApi" asp-controller="Home" class="btn btn-outline-primary">View Book Description</a>
                        <br />
                        @if (book.DbBook.AvailibilityStatus == true)
                        {

                            <a asp-action="RequestLoan" asp-route-id="@book.DbBook.Id" asp-controller="Home" class="btn btn-outline-primary">Request Book</a>
                        }

                    </div>
                </div>
            </div>

            bookId++;
        }
    </div>
</div>

<style>
    body {
        background-color: black;
        color: white;
    }

    .pb-3 {
    }

    .box {
        background-color: whitesmoke;
        padding: 25px;
        border-radius: 25px;
        display: flex;
        margin: 25px;
    }

    .box2 {
        display: flex;
        justify-content: space-between;
        width: 100%;
        margin-left: 20px;
    }

    .right {
        float: right;
    }

    .center {
        float: left;
        color: black;
        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    }

</style>

<script>
    function myFunction() {
        // Declare variables
        var input, filter, container, title, i, txtValue,containerId, titleId;
        input = document.getElementById('titleSearch');
        filter = input.value.toUpperCase();
        var total = @Model.Count();
        // Loop through all list items, and hide those who don't match the search query
        for (i = 0; i <= total; i++) {
            containerId = "bookInfo+" + i;
            titleId = "title+" + i;
            container = document.getElementById(containerId);
            title = document.getElementById(titleId);
            txtValue = title.textContent || title.innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                container.style.display = "";
            } else {
                container.style.display = "none";
            }
        }
    }
</script>
